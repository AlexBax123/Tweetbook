@page "/posts"
@inject ITweetbookHelper TweetbookHelper
@inject NavigationManager NavigationManager

@* @inject Blazored.SessionStorage.ISessionStorageService sessionStorage
 *@
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender:false))

<h3>Index</h3>
<p>
    <button class="btn btn-primary" @onclick="@(()=>AddPost())">Add Post</button>|
</p>

@if (Posts.Count == 0 && Errors.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    UserId
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Posts)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.UserId
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(()=>EditPost(item.Id))" >Edit</button>|
                        <button class="btn btn-primary" @onclick="@(()=>DeletePost(item.Id))">Delete</button>|
                        <button class="btn btn-primary" @onclick="@(()=>DetailsPost(item.Id))">Details</button>|
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @foreach (var item in Errors)
        {
            <p>@item</p>
        }
    </div>
}
@code {
    IList<PostResponse> Posts = new List<PostResponse>();
    ICollection<string> Errors = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        var respons = await TweetbookHelper.GetAllPostsAsync();
        if (respons.Success)
            Posts = respons.PostResponsePagedResponse.Data.ToList();

        Errors = respons.Errors;
    }

    private void EditPost(Guid guid)
    {
        NavigationManager.NavigateTo($"/posts/Edit/{guid}");
    }
    private void DetailsPost(Guid guid)
    {
        NavigationManager.NavigateTo($"/posts/Details/{guid}");
    }
    private void DeletePost(Guid guid)
    {
        NavigationManager.NavigateTo($"/posts/Delete/{guid}");
    }
    private void AddPost()
    {
        NavigationManager.NavigateTo($"/posts/Edit");
    }
}
